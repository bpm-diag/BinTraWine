import Head from "next/head";
import Header from '@/components/header/header';
import Catalog from "../components/tabContents/catalog";
import { MdClose, MdOutlineHome } from "react-icons/md";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import React, { use, useEffect, useState } from "react";
import { Separator } from "@/components/ui/separator";
import { string } from "zod";

export interface TabProps {
  triggerKey: string;
  triggerName: string;
  content: React.ElementType;
}

export default function LandingPage() {

  const [tabs, setTabs] = useState<TabProps[]>([]);
  const [currentTab, setCurrentTab] = useState<string>("catalogo");

  const deleteTab = (index: number) => {
    setTabs(oldState => oldState.filter((_, i) => i !== index));
  }

  const handleDeletion = (e: React.MouseEvent<SVGElement, MouseEvent>, index: number) => {
    e.stopPropagation()
    e.preventDefault()
    deleteTab(index)
  }

  useEffect(() => {
    const isTabPresent = tabs.some(tab => tab.triggerKey === currentTab)
    if (!isTabPresent) setCurrentTab("catalogo")
  }, [tabs])

  return (
    <>
      <Head>
        <title>BinTraWine</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid grid-areas-layout grid-cols-layout grid-rows-layout bg-surface_dark min-h-screen">
        <Header onClick={() => console.log(currentTab)} setTabs={setTabs} className='grid-in-header' />
        <Tabs className="grid-in-main flex flex-col" value={currentTab}>
          <TabsList>
            <TabsTrigger onClick={() => setCurrentTab("catalogo")} className="bg-primary" value="catalogo">
              <MdOutlineHome size={24} />
              <p className="font-primary">Catalogo</p>
            </TabsTrigger>
            <Separator orientation="vertical" className="h-8 bg-black_dim" />
            {
              tabs.map((tab, index) => (
                <TabsTrigger onClick={() => { setCurrentTab(tab.triggerKey) }} key={index} className="bg-primary_light text-white" value={tab.triggerKey}>
                  <p className="font-primary">{tab.triggerName}</p>
                  <MdClose className="hover:text-primary" onClick={(e) => handleDeletion(e, index)} size={24} />
                </TabsTrigger>
              ))
            }
          </TabsList>
          <TabsContent value="catalogo">
            <Catalog setTabs={setTabs} />
          </TabsContent>
          {
            tabs.map((tab, index) => (
              <TabsContent key={index} value={tab.triggerKey}>
                <tab.content />
              </TabsContent>
            ))
          }
        </Tabs>
      </main>
    </>
  );
}